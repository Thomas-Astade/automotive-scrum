include resources/blocks/overview.txt;
include resources/processes/minimalMantis.txt;

artefact ping_pong {
    label "ping pong";
    brief "just some brief description of this node, which cannot make any sense, because it's only an example.";
}

activity create_ping_pong {
    label "create ping pong";
    set ping_pong(null,ping);
}

activity play {
    subactivities create_ping_pong, do_ping, do_pong;
}

activity do_ping {
    label "do ping";
    set ping_pong(pong,ping);
}

activity do_pong {
    set ping_pong(ping,pong);
}

@home {
    subpages processes,
        impressum, 
        example;
    text md/home.md;
}

page example {
    label "how it is done";
    subpages overview-buildingBlocks, overview-links;
    text md/example_begin.md, 
        test.txt, 
        md/example_end.md;
}

page impressum {
    label "Legal Disclosure";
    text md/impressum.md;
}

page processes {
    label "Processes";
    subpages demo,minimalMantis-minimalMantis;
    text md/processes.md;
}

process demo {
    label "Demo";
    responsible project_manager;
    transform customer_requirements;
    create delivery;
    repository git,
        jenkins,
        mantis;
    subactivities project_management,
        requitements_management,
        system_engineering,
        software_development,
        software_test, play;
    text md/demo/process.md;
}

activity project_management {
    label "project management";
}

activity requitements_management {
    label "requirements management";
    brief "some detaild description which can be shown in the tooltip";
    responsible requirements_engineer;
    subactivities review_customer_requirements,
        create_system_requirements,
        create_hardware_requirements,
        create_software_requirements;
}

activity system_engineering {
    label "system engineering";
}

activity software_development {
    label "software development";
    brief "some detaild description which can be shown in the tooltip";
    responsible software_developer;
    tool gcc;
    text md/dbg.md;
}

tool gcc {
}

role software_developer {
    label "software developer";
}

activity software_test {
    label "software test";
    tool gcc;
    text md/dbg.md;
}

activity review_customer_requirements {
    label "review customer requirements";
}

activity create_system_requirements {
    label "create system requirements";
    transform customer_requirements;
    create system_requirements;
}

activity create_hardware_requirements {
    label "create hardware requirements";
}

activity create_software_requirements {
    label "create software requirements";
}

role project_manager {
    label "project manager";
    brief "the process manager is the overall responsible for a project";
    text md/project_manager.md;
}

role requirements_engineer {
    label "requirements engineer";
    text md/dbg.md;
}

artefact customer_requirements {
    label "customer requirements";
}

artefact system_requirements {
    label "system requirements";
}

artefact delivery {
}

repository git {
    label "git";
    contains requirements_folder;
}

repository mantis {
    label "Mantis";
    contains ping_pong;
}

repository jenkins {
    label "Jenkins";
}

folder requirements_folder {
    label "requirements";
    contains customer_requirements_folder,
        system_requirements_folder,
        hardware_requirements_folder,
        software_requirements_folder;
}

folder customer_requirements_folder {
    label "customer requirements";
    contains customer_requirements;
}

folder system_requirements_folder {
    label "system requirements";
    contains system_requirements;
}

folder hardware_requirements_folder {
    label "hardware requirements";
}

folder software_requirements_folder {
    label "software requirements";
}



