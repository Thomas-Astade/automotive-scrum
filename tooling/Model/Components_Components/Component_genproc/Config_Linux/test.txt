include resources/blocks/overview.txt;
include resources/processes/minimalMantis.txt;
include resources/processes/minimalSPICE.txt;

artefact pingPong {
    label "ping" + " pong";
    brief "just some brief description of this node, which cannot make any sense, because it's only an example.";
}

activity createPingPong {
    label "create ping pong";
    set pingPong(null,ping);
}

activity play {
    subactivities createPingPong, doPing, doPong;
}

activity doPing {
    label "do ping";
    set pingPong(pong,ping);
}

extend activity play {
    text md/dbg.md;
}

extend artefact pingPong {
    text md/dbg.md;
}

activity doPong {
    set pingPong(ping,dong)[else];
    
    set pingPong(ping,pong)[if hit];
}

@home {
    subpages
        impressum,
        processes,
        example,
        overview_buildingBlocks,
        overview_links;
    text md/home.md;
}

page example {
    label "how it is done";
    text md/example_begin.md, 
        test.txt, 
        md/example_end.md;
}

page impressum {
    label "Legal Disclosure";
    text md/impressum.md;
}

page processes {
    label "Processes";
    subpages demo,minimalMantis_minimalMantis,minimalSPICE_process;
    text md/processes.md;
}

process demo {
    label "Demo";
    responsible projectManager;
    transform customerRequirements;
    create delivery;
    repository git,
        jenkins,
        mantis;
    subactivities projectManagement,
        requitementsManagement,
        systemEngineering,
        softwareDevelopment,
        softwareTest, play;
    text md/demo/process.md;
}

activity projectManagement {
    label "project management";
}

activity requitementsManagement {
    label "requirements management";
    brief "some detaild description which can be shown in the tooltip";
    responsible requirementsEngineer;
    subactivities reviewCustomerRequirements,
        createSystemRequirements,
        createHardwareRequirements,
        createSoftwareRequirements;
}

activity systemEngineering {
    label "system engineering";
}

activity softwareDevelopment {
    label "software development";
    brief "some detaild description which can be shown in the tooltip";
    responsible softwareDeveloper;
    tool gcc;
    text md/dbg.md;
}

tool gcc {
}

role softwareDeveloper {
    label "software developer";
}

activity softwareTest {
    label "software test";
    tool gcc;
    text md/dbg.md;
}

activity reviewCustomerRequirements {
    label "review customer requirements";
}

activity createSystemRequirements {
    label "create system requirements";
    transform customerRequirements;
    create systemRequirements;
}

activity createHardwareRequirements {
    label "create hardware requirements";
}

activity createSoftwareRequirements {
    label "create software requirements";
}

role projectManager {
    label "project manager";
    brief "the process manager is the overall responsible for a project";
    text md/project_manager.md;
}

role requirementsEngineer {
    label "requirements engineer";
    text md/dbg.md;
}

artefact customerRequirements {
    label "customer requirements";
}

artefact systemRequirements {
    label "system requirements";
}

artefact delivery {
}

repository git {
    label "git";
    contains requirementsFolder, delivery;
}

repository mantis {
    label "Mantis";
    contains pingPong;
}

repository jenkins {
    label "Jenkins";
}

folder requirementsFolder {
    label "requirements";
    contains customerRequirementsFolder,
        systemRequirementsFolder,
        hardwareRequirementsFolder,
        softwareRequirementsFolder;
}

folder customerRequirementsFolder {
    label "customer requirements";
    contains customerRequirements;
}

artefact dummy {
}

extend folder requirementsFolder {
    contains dummy;
    text md/dbg.md;
}

folder systemRequirementsFolder {
    label "system requirements";
    contains systemRequirements;
}

folder hardwareRequirementsFolder {
    label "hardware requirements";
}

folder softwareRequirementsFolder {
    label "software requirements";
}



